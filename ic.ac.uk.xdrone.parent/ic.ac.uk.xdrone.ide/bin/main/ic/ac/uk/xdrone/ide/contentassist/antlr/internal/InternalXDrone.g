/*
 * generated by Xtext 2.17.0
 */
grammar InternalXDrone;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package ic.ac.uk.xdrone.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package ic.ac.uk.xdrone.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import ic.ac.uk.xdrone.services.XDroneGrammarAccess;

}
@parser::members {
	private XDroneGrammarAccess grammarAccess;

	public void setGrammarAccess(XDroneGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFly
entryRuleFly
:
{ before(grammarAccess.getFlyRule()); }
	 ruleFly
{ after(grammarAccess.getFlyRule()); } 
	 EOF 
;

// Rule Fly
ruleFly 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFlyAccess().getGroup()); }
		(rule__Fly__Group__0)
		{ after(grammarAccess.getFlyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnvironment
entryRuleEnvironment
:
{ before(grammarAccess.getEnvironmentRule()); }
	 ruleEnvironment
{ after(grammarAccess.getEnvironmentRule()); } 
	 EOF 
;

// Rule Environment
ruleEnvironment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvironmentAccess().getGroup()); }
		(rule__Environment__Group__0)
		{ after(grammarAccess.getEnvironmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTakeoff
entryRuleTakeoff
:
{ before(grammarAccess.getTakeoffRule()); }
	 ruleTakeoff
{ after(grammarAccess.getTakeoffRule()); } 
	 EOF 
;

// Rule Takeoff
ruleTakeoff 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTakeoffAccess().getTAKEOFFKeyword()); }
		'TAKEOFF()'
		{ after(grammarAccess.getTakeoffAccess().getTAKEOFFKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLand
entryRuleLand
:
{ before(grammarAccess.getLandRule()); }
	 ruleLand
{ after(grammarAccess.getLandRule()); } 
	 EOF 
;

// Rule Land
ruleLand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLandAccess().getLANDKeyword()); }
		'LAND()'
		{ after(grammarAccess.getLandAccess().getLANDKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSuperCommand
entryRuleSuperCommand
:
{ before(grammarAccess.getSuperCommandRule()); }
	 ruleSuperCommand
{ after(grammarAccess.getSuperCommandRule()); } 
	 EOF 
;

// Rule SuperCommand
ruleSuperCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSuperCommandAccess().getAlternatives()); }
		(rule__SuperCommand__Alternatives)
		{ after(grammarAccess.getSuperCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommand
entryRuleCommand
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandAccess().getAlternatives()); }
		(rule__Command__Alternatives)
		{ after(grammarAccess.getCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDOUBLE
entryRuleDOUBLE
:
{ before(grammarAccess.getDOUBLERule()); }
	 ruleDOUBLE
{ after(grammarAccess.getDOUBLERule()); } 
	 EOF 
;

// Rule DOUBLE
ruleDOUBLE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDOUBLEAccess().getAlternatives()); }
		(rule__DOUBLE__Alternatives)
		{ after(grammarAccess.getDOUBLEAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUp
entryRuleUp
:
{ before(grammarAccess.getUpRule()); }
	 ruleUp
{ after(grammarAccess.getUpRule()); } 
	 EOF 
;

// Rule Up
ruleUp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpAccess().getGroup()); }
		(rule__Up__Group__0)
		{ after(grammarAccess.getUpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDown
entryRuleDown
:
{ before(grammarAccess.getDownRule()); }
	 ruleDown
{ after(grammarAccess.getDownRule()); } 
	 EOF 
;

// Rule Down
ruleDown 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDownAccess().getGroup()); }
		(rule__Down__Group__0)
		{ after(grammarAccess.getDownAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeft
entryRuleLeft
:
{ before(grammarAccess.getLeftRule()); }
	 ruleLeft
{ after(grammarAccess.getLeftRule()); } 
	 EOF 
;

// Rule Left
ruleLeft 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftAccess().getGroup()); }
		(rule__Left__Group__0)
		{ after(grammarAccess.getLeftAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRight
entryRuleRight
:
{ before(grammarAccess.getRightRule()); }
	 ruleRight
{ after(grammarAccess.getRightRule()); } 
	 EOF 
;

// Rule Right
ruleRight 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightAccess().getGroup()); }
		(rule__Right__Group__0)
		{ after(grammarAccess.getRightAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForward
entryRuleForward
:
{ before(grammarAccess.getForwardRule()); }
	 ruleForward
{ after(grammarAccess.getForwardRule()); } 
	 EOF 
;

// Rule Forward
ruleForward 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForwardAccess().getGroup()); }
		(rule__Forward__Group__0)
		{ after(grammarAccess.getForwardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBackward
entryRuleBackward
:
{ before(grammarAccess.getBackwardRule()); }
	 ruleBackward
{ after(grammarAccess.getBackwardRule()); } 
	 EOF 
;

// Rule Backward
ruleBackward 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBackwardAccess().getGroup()); }
		(rule__Backward__Group__0)
		{ after(grammarAccess.getBackwardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRotateL
entryRuleRotateL
:
{ before(grammarAccess.getRotateLRule()); }
	 ruleRotateL
{ after(grammarAccess.getRotateLRule()); } 
	 EOF 
;

// Rule RotateL
ruleRotateL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRotateLAccess().getGroup()); }
		(rule__RotateL__Group__0)
		{ after(grammarAccess.getRotateLAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRotateR
entryRuleRotateR
:
{ before(grammarAccess.getRotateRRule()); }
	 ruleRotateR
{ after(grammarAccess.getRotateRRule()); } 
	 EOF 
;

// Rule RotateR
ruleRotateR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRotateRAccess().getGroup()); }
		(rule__RotateR__Group__0)
		{ after(grammarAccess.getRotateRAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWait
entryRuleWait
:
{ before(grammarAccess.getWaitRule()); }
	 ruleWait
{ after(grammarAccess.getWaitRule()); } 
	 EOF 
;

// Rule Wait
ruleWait 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWaitAccess().getGroup()); }
		(rule__Wait__Group__0)
		{ after(grammarAccess.getWaitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionName
entryRuleFunctionName
:
{ before(grammarAccess.getFunctionNameRule()); }
	 ruleFunctionName
{ after(grammarAccess.getFunctionNameRule()); } 
	 EOF 
;

// Rule FunctionName
ruleFunctionName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionNameAccess().getGroup()); }
		(rule__FunctionName__Group__0)
		{ after(grammarAccess.getFunctionNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDrone
entryRuleDrone
:
{ before(grammarAccess.getDroneRule()); }
	 ruleDrone
{ after(grammarAccess.getDroneRule()); } 
	 EOF 
;

// Rule Drone
ruleDrone 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDroneAccess().getGroup()); }
		(rule__Drone__Group__0)
		{ after(grammarAccess.getDroneAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObject
entryRuleObject
:
{ before(grammarAccess.getObjectRule()); }
	 ruleObject
{ after(grammarAccess.getObjectRule()); } 
	 EOF 
;

// Rule Object
ruleObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectAccess().getGroup()); }
		(rule__Object__Group__0)
		{ after(grammarAccess.getObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperCommand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuperCommandAccess().getCommandParserRuleCall_0()); }
		ruleCommand
		{ after(grammarAccess.getSuperCommandAccess().getCommandParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSuperCommandAccess().getFunctionNameParserRuleCall_1()); }
		ruleFunctionName
		{ after(grammarAccess.getSuperCommandAccess().getFunctionNameParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getUpParserRuleCall_0()); }
		ruleUp
		{ after(grammarAccess.getCommandAccess().getUpParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getDownParserRuleCall_1()); }
		ruleDown
		{ after(grammarAccess.getCommandAccess().getDownParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getLeftParserRuleCall_2()); }
		ruleLeft
		{ after(grammarAccess.getCommandAccess().getLeftParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getRightParserRuleCall_3()); }
		ruleRight
		{ after(grammarAccess.getCommandAccess().getRightParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getForwardParserRuleCall_4()); }
		ruleForward
		{ after(grammarAccess.getCommandAccess().getForwardParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getBackwardParserRuleCall_5()); }
		ruleBackward
		{ after(grammarAccess.getCommandAccess().getBackwardParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getRotateLParserRuleCall_6()); }
		ruleRotateL
		{ after(grammarAccess.getCommandAccess().getRotateLParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getRotateRParserRuleCall_7()); }
		ruleRotateR
		{ after(grammarAccess.getCommandAccess().getRotateRParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getWaitParserRuleCall_8()); }
		ruleWait
		{ after(grammarAccess.getCommandAccess().getWaitParserRuleCall_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDOUBLEAccess().getGroup_0()); }
		(rule__DOUBLE__Group_0__0)
		{ after(grammarAccess.getDOUBLEAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDOUBLEAccess().getGroup_1()); }
		(rule__DOUBLE__Group_1__0)
		{ after(grammarAccess.getDOUBLEAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_2()); }
		RULE_INT
		{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getDOUBLEAccess().getGroup_3()); }
		(rule__DOUBLE__Group_3__0)
		{ after(grammarAccess.getDOUBLEAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getFlyAssignment_0()); }
	(rule__Program__FlyAssignment_0)
	{ after(grammarAccess.getProgramAccess().getFlyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getEnvironmentAssignment_1()); }
	(rule__Program__EnvironmentAssignment_1)
	{ after(grammarAccess.getProgramAccess().getEnvironmentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fly__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fly__Group__0__Impl
	rule__Fly__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fly__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyAccess().getFlyKeyword_0()); }
	'fly(){'
	{ after(grammarAccess.getFlyAccess().getFlyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fly__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fly__Group__1__Impl
	rule__Fly__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fly__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyAccess().getGroup_1()); }
	(rule__Fly__Group_1__0)
	{ after(grammarAccess.getFlyAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fly__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fly__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fly__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getFlyAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fly__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fly__Group_1__0__Impl
	rule__Fly__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fly__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyAccess().getTakeoffAssignment_1_0()); }
	(rule__Fly__TakeoffAssignment_1_0)
	{ after(grammarAccess.getFlyAccess().getTakeoffAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fly__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fly__Group_1__1__Impl
	rule__Fly__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fly__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyAccess().getCommandsAssignment_1_1()); }
	(rule__Fly__CommandsAssignment_1_1)*
	{ after(grammarAccess.getFlyAccess().getCommandsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fly__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fly__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fly__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyAccess().getLandAssignment_1_2()); }
	(rule__Fly__LandAssignment_1_2)
	{ after(grammarAccess.getFlyAccess().getLandAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__0__Impl
	rule__Environment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getEnvironmentAction_0()); }
	()
	{ after(grammarAccess.getEnvironmentAccess().getEnvironmentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__1__Impl
	rule__Environment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getEnvironmentKeyword_1()); }
	'environment(){'
	{ after(grammarAccess.getEnvironmentAccess().getEnvironmentKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__2__Impl
	rule__Environment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getDroneAssignment_2()); }
	(rule__Environment__DroneAssignment_2)?
	{ after(grammarAccess.getEnvironmentAccess().getDroneAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__3__Impl
	rule__Environment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getObjectsAssignment_3()); }
	(rule__Environment__ObjectsAssignment_3)*
	{ after(grammarAccess.getEnvironmentAccess().getObjectsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getEnvironmentAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group_0__0__Impl
	rule__DOUBLE__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0_0()); }
	RULE_INT
	{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group_0__1__Impl
	rule__DOUBLE__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getDOUBLEAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0_2()); }
	RULE_INT
	{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group_1__0__Impl
	rule__DOUBLE__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getHyphenMinusKeyword_1_0()); }
	'-'
	{ after(grammarAccess.getDOUBLEAccess().getHyphenMinusKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group_1__1__Impl
	rule__DOUBLE__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
	{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group_1__2__Impl
	rule__DOUBLE__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1_2()); }
	'.'
	{ after(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1_3()); }
	RULE_INT
	{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group_3__0__Impl
	rule__DOUBLE__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getHyphenMinusKeyword_3_0()); }
	'-'
	{ after(grammarAccess.getDOUBLEAccess().getHyphenMinusKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DOUBLE__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_3_1()); }
	RULE_INT
	{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Up__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Up__Group__0__Impl
	rule__Up__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Up__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpAccess().getUPKeyword_0()); }
	'UP'
	{ after(grammarAccess.getUpAccess().getUPKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Up__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Up__Group__1__Impl
	rule__Up__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Up__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getUpAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Up__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Up__Group__2__Impl
	rule__Up__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Up__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpAccess().getDistanceAssignment_2()); }
	(rule__Up__DistanceAssignment_2)
	{ after(grammarAccess.getUpAccess().getDistanceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Up__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Up__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Up__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getUpAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Down__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Down__Group__0__Impl
	rule__Down__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Down__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDownAccess().getDOWNKeyword_0()); }
	'DOWN'
	{ after(grammarAccess.getDownAccess().getDOWNKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Down__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Down__Group__1__Impl
	rule__Down__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Down__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDownAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getDownAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Down__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Down__Group__2__Impl
	rule__Down__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Down__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDownAccess().getDistanceAssignment_2()); }
	(rule__Down__DistanceAssignment_2)
	{ after(grammarAccess.getDownAccess().getDistanceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Down__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Down__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Down__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDownAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getDownAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Left__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left__Group__0__Impl
	rule__Left__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAccess().getLEFTKeyword_0()); }
	'LEFT'
	{ after(grammarAccess.getLeftAccess().getLEFTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left__Group__1__Impl
	rule__Left__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getLeftAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left__Group__2__Impl
	rule__Left__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAccess().getDistanceAssignment_2()); }
	(rule__Left__DistanceAssignment_2)
	{ after(grammarAccess.getLeftAccess().getDistanceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getLeftAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Right__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Right__Group__0__Impl
	rule__Right__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAccess().getRIGHTKeyword_0()); }
	'RIGHT'
	{ after(grammarAccess.getRightAccess().getRIGHTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Right__Group__1__Impl
	rule__Right__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRightAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Right__Group__2__Impl
	rule__Right__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAccess().getDistanceAssignment_2()); }
	(rule__Right__DistanceAssignment_2)
	{ after(grammarAccess.getRightAccess().getDistanceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Right__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getRightAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Forward__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forward__Group__0__Impl
	rule__Forward__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForwardAccess().getFORWARDKeyword_0()); }
	'FORWARD'
	{ after(grammarAccess.getForwardAccess().getFORWARDKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forward__Group__1__Impl
	rule__Forward__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForwardAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getForwardAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forward__Group__2__Impl
	rule__Forward__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForwardAccess().getDistanceAssignment_2()); }
	(rule__Forward__DistanceAssignment_2)
	{ after(grammarAccess.getForwardAccess().getDistanceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forward__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForwardAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getForwardAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Backward__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Backward__Group__0__Impl
	rule__Backward__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Backward__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackwardAccess().getBACKWARDKeyword_0()); }
	'BACKWARD'
	{ after(grammarAccess.getBackwardAccess().getBACKWARDKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Backward__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Backward__Group__1__Impl
	rule__Backward__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Backward__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackwardAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getBackwardAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Backward__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Backward__Group__2__Impl
	rule__Backward__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Backward__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackwardAccess().getDistanceAssignment_2()); }
	(rule__Backward__DistanceAssignment_2)
	{ after(grammarAccess.getBackwardAccess().getDistanceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Backward__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Backward__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Backward__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackwardAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getBackwardAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RotateL__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateL__Group__0__Impl
	rule__RotateL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateL__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateLAccess().getROTATELEFTKeyword_0()); }
	'ROTATELEFT'
	{ after(grammarAccess.getRotateLAccess().getROTATELEFTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateL__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateL__Group__1__Impl
	rule__RotateL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateL__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateLAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRotateLAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateL__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateL__Group__2__Impl
	rule__RotateL__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateL__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateLAccess().getAngleAssignment_2()); }
	(rule__RotateL__AngleAssignment_2)
	{ after(grammarAccess.getRotateLAccess().getAngleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateL__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateL__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateL__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateLAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getRotateLAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RotateR__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateR__Group__0__Impl
	rule__RotateR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateR__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateRAccess().getROTATERIGHTKeyword_0()); }
	'ROTATERIGHT'
	{ after(grammarAccess.getRotateRAccess().getROTATERIGHTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateR__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateR__Group__1__Impl
	rule__RotateR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateR__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateRAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRotateRAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateR__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateR__Group__2__Impl
	rule__RotateR__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateR__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateRAccess().getAngleAssignment_2()); }
	(rule__RotateR__AngleAssignment_2)
	{ after(grammarAccess.getRotateRAccess().getAngleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateR__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateR__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateR__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateRAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getRotateRAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Wait__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wait__Group__0__Impl
	rule__Wait__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Wait__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWaitAccess().getWAITKeyword_0()); }
	'WAIT'
	{ after(grammarAccess.getWaitAccess().getWAITKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wait__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wait__Group__1__Impl
	rule__Wait__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Wait__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWaitAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getWaitAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wait__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wait__Group__2__Impl
	rule__Wait__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Wait__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWaitAccess().getSecondsAssignment_2()); }
	(rule__Wait__SecondsAssignment_2)
	{ after(grammarAccess.getWaitAccess().getSecondsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wait__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wait__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Wait__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWaitAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getWaitAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionName__Group__0__Impl
	rule__FunctionName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionNameAccess().getFunc_nameAssignment_0()); }
	(rule__FunctionName__Func_nameAssignment_0)
	{ after(grammarAccess.getFunctionNameAccess().getFunc_nameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionNameAccess().getLeftParenthesisRightParenthesisKeyword_1()); }
	'()'
	{ after(grammarAccess.getFunctionNameAccess().getLeftParenthesisRightParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Drone__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drone__Group__0__Impl
	rule__Drone__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Drone__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDroneAccess().getDRONEKeyword_0()); }
	'DRONE'
	{ after(grammarAccess.getDroneAccess().getDRONEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drone__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drone__Group__1__Impl
	rule__Drone__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Drone__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDroneAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getDroneAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drone__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drone__Group__2__Impl
	rule__Drone__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Drone__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDroneAccess().getXAssignment_2()); }
	(rule__Drone__XAssignment_2)
	{ after(grammarAccess.getDroneAccess().getXAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drone__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drone__Group__3__Impl
	rule__Drone__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Drone__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDroneAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getDroneAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drone__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drone__Group__4__Impl
	rule__Drone__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Drone__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDroneAccess().getYAssignment_4()); }
	(rule__Drone__YAssignment_4)
	{ after(grammarAccess.getDroneAccess().getYAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drone__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drone__Group__5__Impl
	rule__Drone__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Drone__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDroneAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getDroneAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drone__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drone__Group__6__Impl
	rule__Drone__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Drone__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDroneAccess().getZAssignment_6()); }
	(rule__Drone__ZAssignment_6)
	{ after(grammarAccess.getDroneAccess().getZAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drone__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drone__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Drone__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDroneAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getDroneAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__0__Impl
	rule__Object__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getObject_nameAssignment_0()); }
	(rule__Object__Object_nameAssignment_0)
	{ after(grammarAccess.getObjectAccess().getObject_nameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__1__Impl
	rule__Object__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getObjectAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__2__Impl
	rule__Object__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getSxAssignment_2()); }
	(rule__Object__SxAssignment_2)
	{ after(grammarAccess.getObjectAccess().getSxAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__3__Impl
	rule__Object__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getObjectAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__4__Impl
	rule__Object__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getSyAssignment_4()); }
	(rule__Object__SyAssignment_4)
	{ after(grammarAccess.getObjectAccess().getSyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__5__Impl
	rule__Object__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getObjectAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__6__Impl
	rule__Object__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getSzAssignment_6()); }
	(rule__Object__SzAssignment_6)
	{ after(grammarAccess.getObjectAccess().getSzAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__7__Impl
	rule__Object__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getCommaKeyword_7()); }
	','
	{ after(grammarAccess.getObjectAccess().getCommaKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__8__Impl
	rule__Object__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getLxAssignment_8()); }
	(rule__Object__LxAssignment_8)
	{ after(grammarAccess.getObjectAccess().getLxAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__9__Impl
	rule__Object__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getCommaKeyword_9()); }
	','
	{ after(grammarAccess.getObjectAccess().getCommaKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__10__Impl
	rule__Object__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getLyAssignment_10()); }
	(rule__Object__LyAssignment_10)
	{ after(grammarAccess.getObjectAccess().getLyAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__11__Impl
	rule__Object__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getCommaKeyword_11()); }
	','
	{ after(grammarAccess.getObjectAccess().getCommaKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__12__Impl
	rule__Object__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getLzAssignment_12()); }
	(rule__Object__LzAssignment_12)
	{ after(grammarAccess.getObjectAccess().getLzAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getRightParenthesisKeyword_13()); }
	')'
	{ after(grammarAccess.getObjectAccess().getRightParenthesisKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__FlyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getFlyFlyParserRuleCall_0_0()); }
		ruleFly
		{ after(grammarAccess.getProgramAccess().getFlyFlyParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__EnvironmentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getEnvironmentEnvironmentParserRuleCall_1_0()); }
		ruleEnvironment
		{ after(grammarAccess.getProgramAccess().getEnvironmentEnvironmentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fly__TakeoffAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlyAccess().getTakeoffTakeoffParserRuleCall_1_0_0()); }
		ruleTakeoff
		{ after(grammarAccess.getFlyAccess().getTakeoffTakeoffParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fly__CommandsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlyAccess().getCommandsSuperCommandParserRuleCall_1_1_0()); }
		ruleSuperCommand
		{ after(grammarAccess.getFlyAccess().getCommandsSuperCommandParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fly__LandAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlyAccess().getLandLandParserRuleCall_1_2_0()); }
		ruleLand
		{ after(grammarAccess.getFlyAccess().getLandLandParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__DroneAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentAccess().getDroneDroneParserRuleCall_2_0()); }
		ruleDrone
		{ after(grammarAccess.getEnvironmentAccess().getDroneDroneParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__ObjectsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentAccess().getObjectsObjectParserRuleCall_3_0()); }
		ruleObject
		{ after(grammarAccess.getEnvironmentAccess().getObjectsObjectParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Up__DistanceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpAccess().getDistanceDOUBLEParserRuleCall_2_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getUpAccess().getDistanceDOUBLEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Down__DistanceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDownAccess().getDistanceDOUBLEParserRuleCall_2_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getDownAccess().getDistanceDOUBLEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__DistanceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAccess().getDistanceDOUBLEParserRuleCall_2_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getLeftAccess().getDistanceDOUBLEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__DistanceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAccess().getDistanceDOUBLEParserRuleCall_2_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getRightAccess().getDistanceDOUBLEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__DistanceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForwardAccess().getDistanceDOUBLEParserRuleCall_2_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getForwardAccess().getDistanceDOUBLEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Backward__DistanceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackwardAccess().getDistanceDOUBLEParserRuleCall_2_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getBackwardAccess().getDistanceDOUBLEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateL__AngleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateLAccess().getAngleINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getRotateLAccess().getAngleINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateR__AngleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateRAccess().getAngleINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getRotateRAccess().getAngleINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wait__SecondsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWaitAccess().getSecondsDOUBLEParserRuleCall_2_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getWaitAccess().getSecondsDOUBLEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionName__Func_nameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionNameAccess().getFunc_nameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionNameAccess().getFunc_nameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drone__XAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDroneAccess().getXDOUBLEParserRuleCall_2_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getDroneAccess().getXDOUBLEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drone__YAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDroneAccess().getYDOUBLEParserRuleCall_4_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getDroneAccess().getYDOUBLEParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drone__ZAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDroneAccess().getZDOUBLEParserRuleCall_6_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getDroneAccess().getZDOUBLEParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Object_nameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getObject_nameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getObjectAccess().getObject_nameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__SxAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getSxDOUBLEParserRuleCall_2_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getObjectAccess().getSxDOUBLEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__SyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getSyDOUBLEParserRuleCall_4_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getObjectAccess().getSyDOUBLEParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__SzAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getSzDOUBLEParserRuleCall_6_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getObjectAccess().getSzDOUBLEParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__LxAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getLxDOUBLEParserRuleCall_8_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getObjectAccess().getLxDOUBLEParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__LyAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getLyDOUBLEParserRuleCall_10_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getObjectAccess().getLyDOUBLEParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__LzAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getLzDOUBLEParserRuleCall_12_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getObjectAccess().getLzDOUBLEParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
