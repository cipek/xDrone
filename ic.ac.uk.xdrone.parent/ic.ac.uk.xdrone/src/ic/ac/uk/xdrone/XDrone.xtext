grammar ic.ac.uk.xdrone.XDrone with org.eclipse.xtext.common.Terminals

generate xDrone "http://www.ac.ic/uk/xdrone/XDrone"

Program :
  main = Main
;
  
  
Main:
	fly = Fly
	environment = Environment?
;

Fly :
	
  'fly(){'
	((takeoff+=Takeoff)
 		((commands+=SuperCommand))*
	(land+=Land))
  '}'
;

  
Environment :
 
 {Environment} 'environment(){'
 	 (drone+=Drone | walls+=Walls | objects+=Object)*
// 	(drone+=Drone)?
//  	((objects+=Object))*
  '}'
   
 ;


UserFunction:
	(name = ID) '()'
	'{'
	(func+=Command)*
	'}'
;


Takeoff: 'TAKEOFF()';
Land : 'LAND()';

SuperCommand:
	Command
	| FunctionName
;

Command:
	Up 
	| Down 
	| Left 
	| Right 
	| Forward 
	| Backward
	| RotateL
	| RotateR
	| Wait
	| Move
	| Rotate
;

DOUBLE:
	INT '.' INT
	| '-' INT '.' INT
	| INT
	| '-' INT
;

Move:
	'MOVE' vector=Vector
;

Rotate: 
	'ROTATE' '('angle = DOUBLE')'
;

Up: 
	'UP' '('distance = DOUBLE')'
;
	
Down: 
	'DOWN' '('distance = DOUBLE')'
;
Left: 
	'LEFT' '('distance = DOUBLE')'
;
Right: 
	'RIGHT' '('distance = DOUBLE')'
;
Forward: 
	'FORWARD' '('distance = DOUBLE')'
;
Backward: 
	'BACKWARD' '('distance = DOUBLE')'
;
RotateL: 
	'ROTATELEFT' '('angle = INT')'
;
RotateR: 
	'ROTATERIGHT' '('angle = INT')'
;
Wait:
	'WAIT' '(' seconds = DOUBLE ')'
;

FunctionName:
	func_name = ID '()'
;


Drone:
	'DRONE' vector=Vector
;

Object:
//	object_name = ID '(' sx = DOUBLE ',' sz = DOUBLE ',' sy = DOUBLE ',' lx = DOUBLE ',' lz = DOUBLE ',' ly = DOUBLE')' 
	object_name = ID '{'
		origin=Origin & size=Size & color=Color?
	'}'
;

Origin:
	'origin' '=' vector=Vector
;

Size:
	'size' '=' vector=Vector
;

Vector:
	'(' x = DOUBLE ',' y = DOUBLE ',' z = DOUBLE ')'
;

Color:
	'color' '=' color_value = STRING
	
;

Walls:
	'WALLS' '(' front = INT ',' right = INT ','  back = INT ',' left = INT ')'
;
